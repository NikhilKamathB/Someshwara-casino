"""
Django settings for games project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv 
load_dotenv()


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 's-3!2_-*!#s5hj*^tr%bg(p2622b_dn5dtv0(7arwx()r8*w4-'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'rest_framework',
    'rest_framework.authtoken',
    'rest_framework_api_key',
    'dj_rest_auth',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'dj_rest_auth.registration',
    'allauth.socialaccount.providers.facebook',
    'django_filters',

    'accounts.apps.AccountsConfig',
    'misc.apps.MiscConfig',
    'api.apps.ApiConfig',
    'analytics.apps.AnalyticsConfig',
    'django_admin_listfilter_dropdown',
    'rangefilter',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'games.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [ BASE_DIR / 'templates' ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'games.wsgi.application'


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': os.getenv("PGDATABASE"),
        'USER': os.getenv("PGUSER"),
        'PASSWORD': os.getenv("PGPASSWORD"),
        'HOST': os.getenv("PGHOST"),
        'PORT': os.getenv("PGPORT"),
    },
}

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': BASE_DIR / 'db.sqlite3',
#    }
#}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Authentication Model.
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    # 'accounts.auth.AccountModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend'
]

# Django rest framework.
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES':[
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES':[
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 2,
    'PASSWORD_RESET_SERIALIZER': 
        'api.serializers.PasswordResetSerializer',
}

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

SITE_ID = 1


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

# STATIC_URL = '/static/'
# STATIC_ROOT = BASE_DIR / 'static'

STATIC_URL = '/static/'
STATICFILES_DIRS=[
        os.path.join(BASE_DIR, "static"),
    ]
STATIC_ROOT=os.getenv("PROJECT_STATIC_ROOT")

# Media handling.
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / "media"

# Storage.
DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
AWS_ACCESS_KEY_ID = os.getenv("AWS_ACCESS_KEY_ID")
AWS_SECRET_ACCESS_KEY = os.getenv("AWS_SECRET_ACCESS_KEY")
AWS_ACCESS_LAMBDA_KEY_ID = os.getenv("AWS_ACCESS_LAMBDA_KEY_ID")
AWS_SECRET_LAMBDA_ACCESS_KEY = os.getenv("AWS_SECRET_LAMBDA_ACCESS_KEY")
AWS_STORAGE_BUCKET_NAME = os.getenv("AWS_STORAGE_BUCKET_NAME")
AWS_S3_REGION_NAME = os.getenv("AWS_S3_REGION_NAME")


# User Model.
AUTH_USER_MODEL = 'accounts.User'

CASINO_USER_ID = 1
MAX_NUMBER_OF_USERS_PER_GAME_TABLE_ROOM = 2
OTP_LENGTH = 6
ORDER_NUMBER_LENGTH = 10

ACCOUNT_EMAIL_REQUIRED = False
ACCOUNT_USERNAME_REQUIRED = False

TRANSACTION_GROUP = "Transaction Admin"

TWILIO_ACCOUNT_SID = os.getenv("TWILIO_ACCOUNT_SID", '')
TWILIO_AUTH_TOKEN = os.getenv("TWILIO_AUTH_TOKEN", '')
TWILIO_NUMBER = os.getenv("TWILIO_NUMBER", '')
TWILIO_SERVICE_ID = os.getenv("TWILIO_SERVICE_ID", '')

# Misc.
# Dev.
# CHINESE_GAME_MAKER_BASE_URL = os.getenv('CHINESE_GAME_MAKER_BASE_URL_DEV')
# OPERATOR_TOKEN = os.getenv('OPERATOR_TOKEN_DEV')
# CHINESE_GAME_MAKER_SECRET = os.getenv('SECRET_DEV')
# Prod.
CHINESE_GAME_MAKER_BASE_URL = os.getenv('CHINESE_GAME_MAKER_BASE_URL_PROD')
OPERATOR_TOKEN = os.getenv('OPERATOR_TOKEN_PROD')
CHINESE_GAME_MAKER_SECRET = os.getenv('SECRET_PROD')

# export PGUSER=casino_user
# export PGDATABASE=casino

# export PGUSER=casino_dev_db
# export PGDATABASE=casino_dev_db